***************
INSTALLATION:

Set PARALUTION as solver and PARALLEL true in the Rules.make and then:
make cleanall
make all

To install with the Cuda and Opencl support, install in your OS also:
nvidia-cuda-toolkit

If you have problem with the compilation because cuda does not support the new versions of gcc,
install an old version of gcc and g++ and use them as default with update-alternatives. 
Here an example that sets vers 4.6 as default:

root$ VER=4.6 ; PRIO=60
root$ update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-$VER $PRIO --slave /usr/bin/g++ g++ /usr/bin/g++-$VER
root$ update-alternatives --install /usr/bin/cpp cpp-bin /usr/bin/cpp-$VER $PRIO

root$ VER=4.9 ; PRIO=40
root$ update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-$VER $PRIO --slave /usr/bin/g++ g++ /usr/bin/g++-$VER
root$ update-alternatives --install /usr/bin/cpp cpp-bin /usr/bin/cpp-$VER $PRIO

to check:
root$ update-alternatives --list gcc
root$ update-alternatives --list cpp-bin

To select manually version 4.9 of gcc, g++ and cpp, do:
root$ update-alternatives --config gcc
root$ update-alternatives --config cpp-bin

Restore distro compiler settings (here: back to v4.6):
root$ update-alternatives --auto gcc
root$ update-alternatives --auto cpp-bin


*************
NOTES:

If you just download paralution, enable the option:
#define OBJ_TRACKING_OFF
in src/utils/def.hpp

*************
TODO:
- Disable the sdtout log. Maybe in src/utils/log.hpp
- Optimise: Maybe the arrays do not need to be copied before the call. Maybe the csr solve routine is faster.
  Is first guess working? Look at the web-page: https://www.paralution.com/forums/topic/using-solver-iteratively/
  for some advices for the use in a fem model
