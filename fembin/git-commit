#!/bin/sh
#
#------------------------------------------------------------------------
#
#    Copyright (C) 1985-2020  Georg Umgiesser
#
#    This file is part of SHYFEM.
#
#------------------------------------------------------------------------
#
# handles commit and writes to COMMIT file
#
#------------------------------------------------------------
femdir=~/shyfem/
femdir=.
fembin=$femdir/fembin
commit_file=./COMMIT
version_file=./VERSION
version_fortran=""		#will be filled in later
#------------------------------------------------------------

Ask()
{
  echo -n "$1 (y/n) : " | cat >&2
  read yesno
  echo "$yesno"
  [ "$yesno" != "y" ] && exit 1
}

GetMessage()
{
  echo -n "Enter short message: " | cat >&2
  read message
}

GetSpecial()
{
  what=$1
  [ -f tmp.tmp ] && rm -f tmp.tmp
  git status | grep "$what" | sed -E "s/^.*$what//" > tmp.tmp
  if [ -f tmp.tmp -a -s tmp.tmp ]; then
    echo " $what"
    cat tmp.tmp
  fi
  [ -f tmp.tmp ] && rm -f tmp.tmp
}

CheckRules()
{
  cmp Rules.make femcheck/rules/Rules.dist > /dev/null
  status=$?

  #echo "CheckRules: $status"
  if [ $status -ne 0 ]; then
    echo "Rules.make and Rules.dist are differing"
    echo "You can see the difference with 'make rules_diff'"
    echo "Either subtitute the Rules.make file with Rules.dist"
    echo "  make rules_dist; git add -u"
    echo "or save Rules.make file as new Rules.dist"
    echo "  make rules_new; git add -u"
    exit 1
  fi
}

ChangeFortran()
{
  local file
  file=$( tail -1 $version_file )
  date=$( date +%Y-%m-%d )
  echo "changing file $file adding date $date to commit"
  perl -p -e "s/(commit\s*=\s*).*/\1\'$date\'/g" $file > aux1.tmp
  perl -p -e "s/(COMMIT\}).*/\1\{$date\}/g" aux1.tmp > aux2.tmp
  #exit 1
  mv aux2.tmp $file
  rm aux1.tmp
  version_fortran=$file
}

#------------------------------------------------------------
# cd to base dir and get info
#------------------------------------------------------------

cd $femdir

if [ ! -f VERSION ]; then
  echo "*** not in base directory... aborting"
  exit 1
fi

CheckRules

git status
git diff --cached --stat
GetSpecial "new file:"
GetSpecial "deleted:"

Ask "Continue?"

#------------------------------------------------------------
# prepare log message
#------------------------------------------------------------

GetMessage

echo "============================================================" > log.tmp
echo ""					>> log.tmp
date 					>> log.tmp
echo "" 				>> log.tmp
echo "$message" 			>> log.tmp
echo "" 				>> log.tmp
git diff --cached --stat 		>> log.tmp
GetSpecial "new file:"			>> log.tmp
GetSpecial "deleted:"			>> log.tmp
GetSpecial "renamed:"			>> log.tmp
echo ""					>> log.tmp

vi log.tmp

#------------------------------------------------------------
# start committing - until here nothing has changed
#------------------------------------------------------------

Ask "Do you really want to commit?"

echo "Preparing commit"

ChangeFortran

cat log.tmp $commit_file > com.tmp
mv -f com.tmp $commit_file
rm -f log.tmp

line=`$fembin/shyfem_version.pl -noextra $version_file`
extra=commit_`date +"%Y-%m-%d"`
echo "$line   $extra"                > ver.tmp
echo ""                             >> ver.tmp
cat $version_file                   >> ver.tmp
mv -f ver.tmp $version_file

git add $commit_file $version_file $version_fortran

git commit -m "$message" --no-verify

#------------------------------------------------------------
# end of routine
#------------------------------------------------------------

